{
  "version": 3,
  "sources": ["../src/app/lib/Dom.ts", "../src/app/lib/Palette.ts", "../src/app/lib/Css.ts", "../src/app/lib/Svg.ts", "../src/app/components/Branding/Mandala.ts", "../src/app/lib/Html.ts", "../src/app/components/Grids/IsoShell.ts", "../src/app/lib/Fonts.ts", "../src/app/lib/KeyFrames.ts", "../src/app/lib/Localization.ts", "../src/app/lib/Math.ts", "../src/app/pages/SplashScreen.ts", "../src/main.ts"],
  "sourcesContent": ["export function useDom(selector: string) {\n  let element: HTMLElement = document.querySelector(selector);\n  if (!element) {\n    window.addEventListener('DOMContentLoaded', () => {\n      element = document.querySelector(selector);\n    });\n  }\n  const setter = (...children: (HTMLElement | Node)[]) => {\n    element.innerHTML = '';\n    children.forEach((child) => element.appendChild(child));\n  };\n  return [setter];\n}\n", "const Colors = {\n  black: [0, 0, 5],\n  red: [0, 100, 50],\n  blue: [240, 100, 50],\n  yellow: [55, 100, 50],\n  green: [118, 100, 50],\n  purple: [270, 100, 50],\n  orange: [30, 100, 50],\n  transparent: 'transparent',\n  white: [0, 0, 100],\n};\n\nexport const usePalette = () => {\n  const getter = (color: keyof typeof Colors, adjustLightness: number = 0, opacity: number = 1) => {\n    if (color === 'transparent') return color;\n    const [h, s, l] = Colors[color];\n    const hsla = `hsla(${h}deg,${s}%,${l + adjustLightness}%,${opacity})`;\n    return hsla;\n  };\n  return [getter];\n};\n", "enum Breakpoints {\n  MOBILE = 0,\n  TABLET = 720,\n  DESKTOP = 1200,\n}\n\nfunction uuid(str: string = 'xxxxxxxx') {\n  function getRandomSymbol(symbol: string) {\n    let array;\n    if (symbol === 'y') {\n      array = ['8', '9', 'a', 'b'];\n      return array[Math.floor(Math.random() * array.length)];\n    }\n    array = new Uint8Array(1);\n    window.crypto.getRandomValues(array);\n    return (array[0] % 16).toString(16);\n  }\n  return str.replace(/[xy]/g, getRandomSymbol);\n}\n\ntype CssPropType = keyof CSSStyleDeclaration;\ntype CssPropValType = string | number;\ntype StyleDeclaration = [CssPropType, CssPropValType, boolean?];\nexport const useCss = <T>(\n  declarations: Record<keyof T, StyleDeclaration[]>,\n): [\n  (\n    ...list: (\n      | keyof T\n      | `${Extract<keyof T, string>}_on_hover`\n      | `${Extract<keyof T, string>}_on_tablet`\n      | `${Extract<keyof T, string>}_on_hover_on_tablet`\n      | `${Extract<keyof T, string>}_on_tablet`\n      | `${Extract<keyof T, string>}_on_hover_on_desktop`\n    )[]\n  ) => string,\n  (declarations: Partial<Record<keyof T, StyleDeclaration[]>>) => void,\n] => {\n  const id = uuid();\n  const style = document.createElement('style');\n  style.id = id;\n  document.getElementsByTagName('head')[0].appendChild(style);\n\n  const render = () => {\n    style.innerHTML = '';\n    const styles: string[] = [];\n    const addStyle = (breakpoint: Breakpoints = Breakpoints.MOBILE) => {\n      styles.push(`@media screen and (min-width:${breakpoint}px) {\\n`);\n      const suffix = {\n        [Breakpoints.MOBILE]: '',\n        [Breakpoints.TABLET]: '_on_tablet',\n        [Breakpoints.DESKTOP]: '_on_desktop',\n      };\n      Object.entries(declarations).forEach(([selector, declarations]: [string, StyleDeclaration[]]) => {\n        styles.push(`.${selector}${suffix[breakpoint]}_${id} {`);\n        declarations.forEach(([prop, val, render = true]) =>\n          render ? styles.push(`${(<string>prop).replace(/([A-Z])/g, '-$1').toLowerCase()}:${val};`) : null,\n        );\n        styles.push(`}\\n`);\n        styles.push(`.${selector}_on_hover${suffix[breakpoint]}_${id}:hover {`);\n        declarations.forEach(([prop, val, render = true]) =>\n          render ? styles.push(`${(<string>prop).replace(/([A-Z])/g, '-$1').toLowerCase()}:${val};`) : null,\n        );\n        styles.push(`}\\n`);\n      });\n      styles.push(`}\\n`);\n    };\n    addStyle(Breakpoints.MOBILE);\n    addStyle(Breakpoints.TABLET);\n    addStyle(Breakpoints.DESKTOP);\n    style.innerHTML = styles.join('');\n  };\n\n  render();\n\n  const getter = (\n    ...list: (\n      | keyof T\n      | `${Extract<keyof T, string>}_on_hover`\n      | `${Extract<keyof T, string>}_on_tablet`\n      | `${Extract<keyof T, string>}_on_hover_on_tablet`\n      | `${Extract<keyof T, string>}_on_tablet`\n      | `${Extract<keyof T, string>}_on_hover_on_desktop`\n    )[]\n  ) => {\n    return list.map((item) => `${item}_${id}`).join(' ');\n  };\n\n  const setter = (update: Partial<Record<keyof T, StyleDeclaration[]>>) => {\n    declarations = { ...declarations, ...update };\n    render();\n  };\n\n  return [getter, setter];\n};\n", "// SVG\n\ntype SvgNode = SVGElement | string | number;\ntype SvgTemplate = (...children: SvgNode[]) => void;\n\ntype SvgTag<T extends keyof SVGElementTagNameMap> = {\n  tag: T;\n  attrs?: SvgAttr<T>[];\n  children: SvgNode[];\n};\n\ntype SvgAttr<X extends keyof Partial<SVGElementTagNameMap>> = [\n  Extract<keyof SVGElementTagNameMap[X], string> | 'class' | 'd',\n  string | number | Function | boolean,\n];\n\nfunction SVG<T extends keyof SVGElementTagNameMap>({ tag, attrs = [], children = [] }: SvgTag<T>) {\n  const el = document.createElementNS('http://www.w3.org/2000/svg', tag);\n  attrs.forEach(([k, v]: SvgAttr<T>) => {\n    if (typeof v === 'function') {\n      el.addEventListener(k.substring(2, k.length), (e) => v(e));\n    } else if (typeof v === 'boolean') {\n      if (v === true) el.setAttribute(k, '');\n    } else {\n      el.setAttribute(k, v.toString());\n    }\n  });\n  children.forEach((child) => {\n    if (child instanceof Node) el.appendChild(child);\n    if (typeof child === 'string') el.innerHTML += child;\n  });\n  return el;\n}\n\nexport function useSvg<T extends keyof SVGElementTagNameMap>(\n  tag: T,\n  ...attrs: SvgAttr<T>[]\n): [(...children: SvgNode[]) => SVGElement, SvgTemplate, (...attrs: SvgAttr<T>[]) => void] {\n  let container: SVGElement;\n  const element = (...children: SvgNode[]) => {\n    container = SVG<T>({ tag, attrs, children });\n    return container;\n  };\n  const replace = (...children: SvgNode[]) => {\n    const newContainer = SVG<T>({ tag, attrs, children });\n    container.replaceWith(newContainer);\n    container = newContainer;\n  };\n  const updateAttrs = (...attrs: SvgAttr<T>[]) => {\n    attrs.forEach((attr) => {\n      const [key, val] = attr;\n      container.setAttribute(key, val as string);\n    });\n  };\n  return [element, replace, updateAttrs];\n}\n", "import { usePalette } from 'src/app/lib/Palette';\nimport { useCss } from '../../lib/Css';\nimport { useSvg } from '../../lib/Svg';\n\nconst [palette] = usePalette();\n\nconst [css] = useCss({\n  whiteFill: [['fill', palette('white')]],\n  whiteStroke: [['stroke', palette('white')]],\n  text: [\n    ['fontSize', '10px'],\n    ['color', palette('white')],\n  ],\n});\n\ntype Point = [number, number];\n\nexport const Transformer = {\n  move(points: Point[], xOffset: number, yOffset: number): Point[] {\n    return points.map(([x, y]) => [x + xOffset, y + yOffset]);\n  },\n  polarToCartesian(cx: number, cy: number, diameter: number, deg: number): Point {\n    const radius = diameter / 2;\n    var radian = ((deg - 90) * Math.PI) / 180.0;\n    return [cx + radius * Math.cos(radian), cy + radius * Math.sin(radian)];\n  },\n  resize(points: Point[], scale: number): Point[] {\n    const [p1x, p1y] = points[0];\n    const [xOffset, yOffset] = [p1x * scale, p1y * scale];\n    return points.map((point) => [point[0] * scale + xOffset, point[1] * scale + yOffset]);\n  },\n  rotate(points: Point[], angle: number): Point[] {\n    const [cx, cy] = points[0];\n    return points.map(([x, y]) => {\n      const radians = (Math.PI / 180) * -angle;\n      const cos = Math.cos(radians);\n      const sin = Math.sin(radians);\n      const nx = cos * (x - cx) + sin * (y - cy) + cx;\n      const ny = cos * (y - cy) - sin * (x - cx) + cy;\n      return [nx, ny];\n    });\n  },\n};\n\nexport const Renderer = {\n  circle([x, y]: Point, fill: CSSStyleDeclaration['fill']) {\n    const [circle] = useSvg('circle', ['cx', x], ['cy', y], ['r', 2], ['class', css('whiteFill')]);\n    return circle();\n  },\n  polyline(\n    points: Point[],\n    stroke: CSSStyleDeclaration['stroke'],\n    strokeWidth: CSSStyleDeclaration['strokeWidth'],\n    fill: CSSStyleDeclaration['fill'],\n    close: boolean = true,\n  ) {\n    const closingPoint = close ? `${points[0][0]},${points[0][1]}` : null;\n    const [polygon] = useSvg(\n      'polygon',\n      ['points', `${points.map(([x, y]) => `${x},${y}`).join(' ')} ${closingPoint}`],\n      ['style', `stroke:${stroke};fill:${fill};stroke-width:${strokeWidth};stroke-line-cap:round`],\n    );\n    return polygon();\n  },\n  text([x, y]: Point, txt: string) {\n    const [text] = useSvg('text', ['x', x], ['y', y], ['class', css('text')]);\n    return text(txt);\n  },\n};\n\ninterface BezierProps {\n  p1: [number, number];\n  p2: [number, number];\n  p3: [number, number];\n  p4: [number, number];\n  pointFrequency: number;\n  stroke: CSSStyleDeclaration['stroke'];\n}\n\nexport class Bezier {\n  private p1: BezierProps['p1'];\n  private p2: BezierProps['p2'];\n  private p3: BezierProps['p3'];\n  private p4: BezierProps['p4'];\n  private pointFrequency: BezierProps['pointFrequency'] = 4;\n  points: Point[] = [];\n  private stroke: BezierProps['stroke'];\n  private tIncrement: number;\n  constructor(props: BezierProps) {\n    // props\n    this.p1 = props.p1;\n    this.p2 = props.p2;\n    this.p3 = props.p3;\n    this.p4 = props.p4;\n    this.pointFrequency = props.pointFrequency;\n    this.stroke = props.stroke;\n    this.tIncrement = 1 / props.pointFrequency;\n\n    // bindings\n    this.calcT = this.calcT.bind(this);\n    this.calcCoordsAtT = this.calcCoordsAtT.bind(this);\n    this.render = this.render.bind(this);\n\n    // computed props\n    // populate points (+1 to complete points)\n    for (let i = 0; i < this.pointFrequency + 1; i++) {\n      this.points.push(this.calcCoordsAtT(i * this.tIncrement));\n    }\n  }\n  private calcT(t: number, x1: number, y1: number, x2: number, y2: number): [number, number] {\n    const xOffset = x2 > x1 ? x2 : x1;\n    const yOffset = y2 > y1 ? y2 : y1;\n    const xT = x2 > x1 ? 1 - t : t;\n    const yT = y2 > y1 ? 1 - t : t;\n    const xDirection = x2 > x1 ? 1 : -1;\n    const yDirection = y2 > y1 ? 1 : -1;\n    const x = xOffset + xT * (x1 - x2) * xDirection;\n    const y = yOffset + yT * (y1 - y2) * yDirection;\n    return [x, y];\n  }\n  private calcCoordsAtT(t: number) {\n    // see https://webglfundamentals.org/webgl/lessons/webgl-3d-geometry-lathe.html\n\n    // The two lines that intersect p\n    const q1 = this.calcT(t, this.p1[0], this.p1[1], this.p2[0], this.p2[1]);\n    const q2 = this.calcT(t, this.p2[0], this.p2[1], this.p3[0], this.p3[1]);\n    const q3 = this.calcT(t, this.p3[0], this.p3[1], this.p4[0], this.p4[1]);\n\n    // The line that intersects q\n    const r1 = this.calcT(t, q1[0], q1[1], q2[0], q2[1]);\n    const r2 = this.calcT(t, q2[0], q2[1], q3[0], q3[1]);\n\n    // The point on r\n    return this.calcT(t, r1[0], r1[1], r2[0], r2[1]);\n  }\n  render(debug: boolean = true) {\n    const circles = debug ? this.points.map((point) => Renderer.circle(point, this.stroke)) : null;\n    const polyline = Renderer.polyline(this.points, this.stroke, this.fill, true);\n    const [g] = useSvg('g');\n    return g(...circles, polyline);\n  }\n}\n\ninterface MandalaProps {\n  cx: number;\n  cy: number;\n  debug: boolean;\n  diameter: number;\n  fill: CSSStyleDeclaration['fill'];\n  stroke: CSSStyleDeclaration['stroke'];\n  strokeWidth: CSSStyleDeclaration['strokeWidth'];\n  petals: {\n    height: number;\n    frequency: number;\n    slope: number;\n  }[];\n  rotation: number;\n  rotationSpeed: number;\n  on?: {\n    mouseover?: () => void;\n    mouseleave?: () => void;\n  };\n}\n\ninterface PetalCalc {\n  p1: Point;\n  p2: Point;\n  p3: Point;\n  p4: Point;\n  pointFrequency: number;\n  angle: number;\n}\n\nconst createContainer: () => SVGGElement = () => {\n  const [g] = useSvg('g', ['style', 'pointer-events:none']);\n  return g() as SVGGElement;\n};\n\ntype MandalaState = 'INIT' | 'STATIC' | 'ANIMATING';\ntype MandalaEvent =\n  | { event: 'ANIMATE' }\n  | { event: 'INIT' }\n  | { event: 'STOP' }\n  | { event: 'ROTATE' }\n  | { event: 'SET_PETAL'; numOfPetals: number };\nexport class Mandala {\n  private cx: MandalaProps['cx'];\n  private cy: MandalaProps['cy'];\n  private debug: MandalaProps['debug'];\n  private diameter: MandalaProps['diameter'];\n  private fill: MandalaProps['fill'];\n  private petals: MandalaProps['petals'];\n  private stroke: MandalaProps['stroke'];\n  private strokeWidth: MandalaProps['strokeWidth'];\n  private rotation: MandalaProps['rotation'] = 0;\n  private rotationSpeed: MandalaProps['rotationSpeed'] = 0.3;\n  private on: MandalaProps['on'];\n  private petalCalcs: PetalCalc[] = [];\n  private state: MandalaState = 'INIT';\n  private el: SVGGElement = createContainer();\n  constructor(props: MandalaProps) {\n    this.cx = props.cx;\n    this.cy = props.cy;\n    this.debug = props.debug;\n    this.diameter = props.diameter;\n    this.fill = props.fill;\n    this.petals = props.petals;\n    this.stroke = props.stroke;\n    this.strokeWidth = props.strokeWidth;\n    this.petals = props.petals;\n    this.rotation = props.rotation;\n    this.rotationSpeed = props.rotationSpeed;\n    this.on = props.on;\n    this.msg({ event: 'INIT' });\n  }\n  msg(event: MandalaEvent) {\n    // state based\n    switch (this.state) {\n      case 'INIT':\n        switch (event.event) {\n          case 'INIT':\n            this.state = 'STATIC';\n            this.calcPetals().render().registerEvents();\n            break;\n        }\n      case 'STATIC':\n        switch (event.event) {\n          case 'ANIMATE':\n            this.state = 'ANIMATING';\n            this.animate();\n            break;\n        }\n      case 'ANIMATING':\n        switch (event.event) {\n          case 'STOP':\n            this.state = 'STATIC';\n            break;\n          case 'ROTATE':\n            this.calcPetals().render().registerEvents();\n            break;\n        }\n    }\n  }\n  private calcPetals() {\n    const calcs: PetalCalc[] = [];\n    const angle = 360 / this.petals.length;\n    const startingAngle = angle / 2;\n    this.petals.forEach((petal, i) => {\n      const petalAngle = angle * i + this.rotation;\n      const nextAngle = angle * (i + 1) + this.rotation;\n      const [x, y] = Transformer.polarToCartesian(this.cx, this.cy, this.diameter, petalAngle);\n      const [nx, ny] = Transformer.polarToCartesian(this.cx, this.cy, this.diameter, nextAngle);\n      const width = Math.hypot(nx - x, ny - y);\n      const [p1, p2, p3, p4] = Transformer.rotate(\n        Transformer.move(\n          [\n            [0, 0],\n            [width * petal.slope, petal.height],\n            [width - width * petal.slope, petal.height],\n            [width, 0],\n          ],\n          x,\n          y,\n        ),\n        petalAngle + startingAngle,\n      );\n      calcs.push({ p1, p2, p3, p4, pointFrequency: petal.frequency, angle: petalAngle });\n    });\n    this.petalCalcs = calcs;\n    return this;\n  }\n  private registerEvents() {\n    if (this.on?.mouseover) this.el.addEventListener('mouseenter', this.on.mouseover);\n    if (this.on?.mouseleave && document.body) document.body.addEventListener('mouseout', this.on.mouseleave);\n    if (this.on?.mouseleave && document.body) document.body.addEventListener('mouseleave', this.on.mouseleave);\n    return this;\n  }\n  private render() {\n    this.el.innerHTML = '';\n    if (this.on?.mouseover) {\n      this.el.style.pointerEvents = 'auto';\n      this.el.style.cursor = 'pointer';\n    }\n\n    const isPlaying = (angle: number) => angle % 360 >= 0 && angle % 360 <= 360 / (360 / this.rotationSpeed);\n\n    const texts = this.petalCalcs.map((p) =>\n      Renderer.text([p.p1[0] - 20, p.p1[1] - 10], `${(p.angle % 360).toFixed(0)}`),\n    );\n    const circles = this.petalCalcs.map((p) =>\n      Renderer.circle(p.p1, isPlaying(p.angle) ? palette('white') : this.stroke),\n    );\n    const polyline = Renderer.polyline(\n      this.petalCalcs\n        .map(\n          ({ p1, p2, p3, p4, pointFrequency, angle }) =>\n            new Bezier({ p1, p2, p3, p4, pointFrequency, stroke: this.stroke }).points,\n        )\n        .flat(1),\n      this.stroke,\n      this.strokeWidth,\n      this.fill,\n      true,\n    );\n    if (this.debug) circles.forEach((circle) => this.el.appendChild(circle));\n    if (this.debug) texts.forEach((text) => this.el.appendChild(text));\n    this.el.appendChild(polyline);\n    return this;\n  }\n  private animate() {\n    const step = () => {\n      this.rotation += this.rotationSpeed; // should rerender\n      if (this.state === 'ANIMATING') {\n        this.msg({ event: 'ROTATE' });\n        window.requestAnimationFrame(step);\n      }\n    };\n    window.requestAnimationFrame(step);\n  }\n}\n\nexport const useMandala = (props: MandalaProps): [any, (event: MandalaEvent) => void] => {\n  const mandala = new Mandala(props);\n  return [mandala.el, mandala.msg.bind(mandala)];\n};\n", "// HTML\n\nexport type HtmlNode = HTMLElement | string | number | SVGElement;\nexport type HtmlTemplate = (...children: HtmlNode[]) => void;\n\ntype HtmlTag<T extends keyof HTMLElementTagNameMap> = {\n  tag: T;\n  attrs?: HtmlAttr<T>[];\n  children: HtmlNode[];\n};\n\nexport type HtmlAttr<X extends keyof Partial<HTMLElementTagNameMap>> = [\n  Extract<keyof HTMLElementTagNameMap[X], string> | 'class' | `data-${string}`,\n  string | number | Function | boolean,\n];\n\nfunction HTML<T extends keyof HTMLElementTagNameMap>({ tag, attrs = [], children = [] }: HtmlTag<T>) {\n  const el = document.createElementNS('http://www.w3.org/1999/xhtml', tag);\n  attrs.forEach(([k, v]: HtmlAttr<T>) => {\n    if (typeof v === 'function') {\n      el.addEventListener(k.substring(2, k.length), (e) => v(e));\n    } else if (typeof v === 'boolean') {\n      if (v === true) el.setAttribute(k, '');\n    } else {\n      if (v) el.setAttribute(k, v.toString());\n    }\n  });\n  children.forEach((child) => {\n    if (child instanceof Node) el.appendChild(child);\n    if (typeof child === 'string') el.innerHTML += child;\n  });\n  return el;\n}\n\nexport function useHtml<T extends keyof HTMLElementTagNameMap>(\n  tag: T,\n  ...attrs: HtmlAttr<T>[]\n): [(...children: HtmlNode[]) => HTMLElement, HtmlTemplate, (...attrs: HtmlAttr<T>[]) => void] {\n  let container: HTMLElement;\n  const element = (...children: HtmlNode[]) => {\n    container = HTML<T>({ tag, attrs, children });\n    return container;\n  };\n  const replace = (...children: HtmlNode[]) => {\n    const newContainer = HTML<T>({ tag, attrs, children });\n    container.replaceWith(newContainer);\n    container = newContainer;\n  };\n  const updateAttrs = (...attrs: HtmlAttr<T>[]) => {\n    attrs.forEach((attr) => {\n      const [key, val] = attr;\n      container.setAttribute(key, val as string);\n    });\n  };\n  return [element, replace, updateAttrs];\n}\n", "import { usePalette } from 'src/app/lib/Palette';\nimport { useCss } from '../../lib/Css';\nimport { useHtml } from '../../lib/Html';\n\nconst [palette] = usePalette();\n\nconst [css] = useCss({\n  grid: [\n    ['display', 'flex'],\n    ['height', '100vh'],\n    ['width', '100vw'],\n    ['backgroundColor', palette('black')],\n    ['backgroundSize', '10px 10px'],\n  ],\n});\n\nexport const useIsoShell = (content: HTMLElement) => {\n  const [Grid] = useHtml('div', ['class', css('grid')]);\n  return [Grid(content)];\n};\n", "enum Font {\n  arial = 'Arial',\n}\n\ntype FontList = keyof typeof Font;\n\nexport const useFont = () => {\n  const getter = (font: FontList) => Font[font];\n  return [getter];\n};\n", "function uuid(str: string = 'xxxxxxxx') {\n  function getRandomSymbol(symbol: string) {\n    let array;\n    if (symbol === 'y') {\n      array = ['8', '9', 'a', 'b'];\n      return array[Math.floor(Math.random() * array.length)];\n    }\n    array = new Uint8Array(1);\n    window.crypto.getRandomValues(array);\n    return (array[0] % 16).toString(16);\n  }\n  return str.replace(/[xy]/g, getRandomSymbol);\n}\n\ntype PercentType = number;\ntype CssPropType = keyof CSSStyleDeclaration;\ntype CssPropValType = string | number;\nexport type KeyframeStyleDeclaration = [PercentType, CssPropType, CssPropValType][];\nexport const useKeyFrames = <T>(\n  declarations: Record<keyof T, KeyframeStyleDeclaration>,\n): [(...list: (keyof T)[]) => string, (update: Partial<Record<keyof T, KeyframeStyleDeclaration[]>>) => void] => {\n  const id = uuid();\n  const style = document.createElement('style');\n  style.id = id;\n  document.getElementsByTagName('head')[0].appendChild(style);\n\n  const render = () => {\n    style.innerHTML = '';\n    const styles: string[] = [];\n    const declarationList = Object.entries(declarations).sort((a, b) => (a[0] < b[0] ? -1 : 1));\n    declarationList.forEach(([selector, declaration]: [string, KeyframeStyleDeclaration]) => {\n      styles.push(`@keyframes ${selector}_${id} {\\n`);\n      declaration.forEach(([percent, prop, val]) => styles.push(`${percent}% { ${prop}: ${val}; }\\n`));\n      styles.push(`}\\n`);\n    });\n    style.innerHTML = styles.join('');\n  };\n\n  render();\n\n  const getter = (...list: (keyof T)[]) => list.map((item) => `${item}_${id}`).join(', ');\n\n  const setter = (update: Partial<Record<keyof T, KeyframeStyleDeclaration[]>>) => {\n    declarations = { ...declarations, ...update };\n    render();\n  };\n\n  return [getter, setter];\n};\n", "const EN_US = {\n  mainMenuHome: 'Home',\n  mainMenuDocs: 'Docs',\n  mainMenuLearn: 'Learn',\n  mainMenuShowcase: 'Showcase',\n  mainMenuGuestbook: 'Guestbook',\n  screenDocsTitle: 'Docs',\n  screenTitleHome: 'Home',\n  screenTitleComponent: 'Components',\n  screenLearnTitle: 'Learn',\n  screenShowcaseTitle: 'Showcase',\n  screenGuestbookTitle: 'Guestbook',\n} as const;\n\ntype Key = keyof typeof EN_US;\n\nexport const useLocalization = (lang = window.navigator.language) => {\n  const getter = (key: Key) => {\n    let translation;\n    switch (lang) {\n      case 'en-US':\n        translation = EN_US;\n        break;\n      default:\n        translation = EN_US;\n        break;\n    }\n    return { ...EN_US, ...translation }[key];\n  };\n  return [getter];\n};\n", "function randomNumberInRange(min: number, max: number) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport const useMath = () => ({\n  randomNumberInRange,\n});\n", "import { useMandala } from '../components/Branding/Mandala';\nimport { useIsoShell } from '../components/Grids/IsoShell';\nimport { useCss } from '../lib/Css';\nimport { useFont } from '../lib/Fonts';\nimport { useHtml } from '../lib/Html';\nimport { useKeyFrames } from '../lib/KeyFrames';\nimport { useLocalization } from '../lib/Localization';\nimport { useMath } from '../lib/Math';\nimport { usePalette } from '../lib/Palette';\nimport { useSvg } from '../lib/Svg';\n\nconst [l10n] = useLocalization();\nconst [palette] = usePalette();\nconst [font] = useFont();\n\nconst [kf] = useKeyFrames({\n  fadeIn: [\n    [0, 'opacity', 0],\n    [100, 'opacity', 1],\n  ],\n  slideDown: [\n    [0, 'transform', 'translateY(-15px)'],\n    [100, 'transform', 'translateY(0px)'],\n  ],\n  slideUp: [\n    [0, 'transform', 'translateY(15px)'],\n    [100, 'transform', 'translateY(0px)'],\n  ],\n  scaleUp: [\n    [0, 'transform', 'scale(0.5)'],\n    [100, 'transform', 'scale(1)'],\n  ],\n});\n\nconst [css] = useCss({\n  animationContainer: [\n    ['color', palette('white')],\n    ['fontFamily', font('arial')],\n    ['padding', '0px'],\n    ['fontSize', '14px'],\n    ['cursor', 'pointer'],\n  ],\n  wrapper: [\n    ['display', 'flex'],\n    ['width', '100vw'],\n    ['justifyContent', 'center'],\n  ],\n  container: [\n    ['display', 'flex'],\n    ['flexDirection', 'column'],\n    ['justifyContent', 'center'],\n    ['alignItems', 'center'],\n    ['maxWidth', '500px'],\n    ['animation', kf('fadeIn', 'scaleUp')],\n    ['animationFillMode', 'forwards'],\n    ['animationDuration', '.5s'],\n    ['animationDelay', '0s'],\n  ],\n  title: [\n    ['color', palette('white')],\n    ['fontFamily', font('arial')],\n    ['fontWeight', 'bold'],\n    ['fontSize', '30px'],\n    ['textTransform', 'uppercase'],\n    ['letterSpacing', '30px'],\n    ['textAlign', 'center'],\n    ['marginBottom', '10px'],\n    ['marginLeft', '30px'],\n    ['animation', kf('slideUp', 'fadeIn')],\n    ['animationFillMode', 'forwards'],\n    ['animationDuration', '1s'],\n    ['animationDelay', '0.25s'],\n    ['opacity', 0],\n  ],\n  subTitle: [\n    ['color', palette('white', 0, 0.2)],\n    ['fontFamily', font('arial')],\n    ['fontSize', '10px'],\n    ['textTransform', 'uppercase'],\n    ['letterSpacing', '5px'],\n    ['textAlign', 'center'],\n    ['marginBottom', '0px'],\n    ['animation', kf('slideUp', 'fadeIn')],\n    ['animationFillMode', 'forwards'],\n    ['animationDuration', '1s'],\n    ['animationDelay', '0.5s'],\n    ['opacity', 0],\n  ],\n  tagline: [\n    ['color', palette('white')],\n    ['fontFamily', font('arial')],\n    ['fontSize', '15px'],\n    ['textTransform', 'uppercase'],\n    ['letterSpacing', '5px'],\n    ['textAlign', 'center'],\n    ['lineHeight', '28px'],\n    ['padding', '0px 30px 30px'],\n    ['opacity', '0'],\n    ['animationName', kf('slideUp', 'fadeIn')],\n    ['animationFillMode', 'forwards'],\n    ['animationDuration', '1s'],\n    ['animationDelay', '.75s'],\n  ],\n  button: [\n    ['backgroundColor', palette('transparent')],\n    ['color', palette('white')],\n    ['borderTop', '0px'],\n    ['borderLeft', '0px'],\n    ['borderRight', '0px'],\n    ['borderBottom', `5px solid ${palette('white', 0, 0.08)}`],\n    ['padding', '15px 20px'],\n    ['textTransform', 'uppercase'],\n    ['fontSize', '10px'],\n    ['letterSpacing', '5px'],\n    ['cursor', 'pointer'],\n    ['opacity', 0],\n    ['animationName', kf('slideUp', 'fadeIn')],\n    ['animationFillMode', 'forwards'],\n    ['animationDuration', '1s'],\n    ['animationDelay', '1s'],\n  ],\n  bg_white: [\n    ['backgroundColor', palette('white', 0, 0.1)],\n    ['transition', 'all 1s'],\n  ],\n  white_text: [\n    ['color', palette('white', 0, 0.75)],\n    ['transition', 'all 1s'],\n  ],\n  github_link: [\n    ['color', palette('white', 0, 0.2)],\n    ['fontSize', '10px'],\n    ['position', 'fixed'],\n    ['top', '20px'],\n    ['right', '20px'],\n    ['textDecoration', 'none'],\n    ['textTransform', 'uppercase'],\n    ['fontFamily', font('arial')],\n    ['letterSpacing', '2px'],\n    ['borderBottom', `1px dotted ${palette('white', 0, 0.1)}`],\n    ['display', 'block'],\n    ['padding', '5px'],\n  ],\n  fs_12: [\n    ['fontSize', '12px'],\n    ['lineHeight', '16px'],\n  ],\n  fs_15: [\n    ['fontSize', '15px'],\n    ['lineHeight', '26px'],\n  ],\n});\n\nconst { randomNumberInRange } = useMath();\n\nconst getRandomColor = () => {\n  const colors = [\n    palette('blue', 30, 0.7),\n    palette('red', 30, 0.7),\n    palette('yellow', 0, 0.7),\n    palette('green', 30, 0.7),\n    palette('purple', 30, 0.7),\n    palette('orange'),\n  ];\n  return colors[randomNumberInRange(0, colors.length - 1)];\n};\n\nconst CanvasSize = 300;\n\nconst createMandala = () => {\n  const [Mandala] = useSvg('svg', ['width', CanvasSize], ['height', CanvasSize]);\n\n  const [RingOne, RingOneMessage] = useMandala({\n    cx: CanvasSize / 2,\n    cy: CanvasSize / 2,\n    debug: false,\n    diameter: CanvasSize * 0.75,\n    fill: palette('transparent'),\n    stroke: getRandomColor(),\n    petals: [\n      ...Array(randomNumberInRange(20, 50)).fill({\n        height: randomNumberInRange(0, 100),\n        frequency: 20,\n        slope: randomNumberInRange(1, 5),\n      }),\n    ],\n    rotation: randomNumberInRange(0, 90),\n    rotationSpeed: 0.75,\n    strokeWidth: '1',\n  });\n\n  const [RingTwo, RingTwoMessage] = useMandala({\n    cx: CanvasSize / 2,\n    cy: CanvasSize / 2,\n    debug: false,\n    diameter: CanvasSize * 0.3,\n    fill: palette('transparent'),\n    stroke: getRandomColor(),\n    petals: Array(randomNumberInRange(20, 50)).fill({\n      height: randomNumberInRange(0, 100),\n      frequency: 20,\n      slope: randomNumberInRange(1, 3),\n    }),\n    rotation: randomNumberInRange(0, 90),\n    rotationSpeed: -0.5,\n    strokeWidth: '1',\n  });\n\n  const [RingThree, RingThreeMessage] = useMandala({\n    cx: CanvasSize / 2,\n    cy: CanvasSize / 2,\n    debug: false,\n    diameter: CanvasSize * 0.3,\n    fill: palette('transparent'),\n    stroke: getRandomColor(),\n    petals: [\n      ...Array(randomNumberInRange(20, 50)).fill({\n        height: randomNumberInRange(0, 100),\n        frequency: 20,\n        slope: randomNumberInRange(1, 6),\n      }),\n    ],\n    rotation: randomNumberInRange(0, 90),\n    rotationSpeed: 1,\n    strokeWidth: '1',\n  });\n\n  return Mandala(RingOne, RingTwo, RingThree);\n};\n\nexport const useSplashScreen = () => {\n  let interval: number;\n  const [wrapper] = useHtml('div', ['class', css('wrapper')]);\n  const [container] = useHtml('div', ['class', css('container')]);\n  const stopAnimation = () => clearInterval(interval);\n  const startAnimation = () => {\n    stopAnimation();\n    interval = setInterval(() => setAnimationContainer(createMandala()));\n  };\n  const [animationContainer, setAnimationContainer] = useHtml('div', ['class', css('animationContainer')]);\n  const [title] = useHtml('div', ['class', css('title')]);\n  const [github] = useHtml(\n    'a',\n    ['class', css('github_link', 'white_text_on_hover')],\n    ['href', 'http://github.com/kvnlnt/feds'],\n    ['target', '_blank'],\n  );\n  const [subTitle] = useHtml('div', ['class', css('subTitle')]);\n  const [tagline] = useHtml('div', ['class', css('tagline', 'fs_12', 'fs_15_on_tablet')]);\n  const [button] = useHtml(\n    'button',\n    ['class', css('button', 'bg_white_on_hover')],\n    ['onclick', () => alert('COMING SOON!!! ')],\n    ['onmouseover', () => startAnimation()],\n    ['onmouseout', () => stopAnimation()],\n  );\n  const [dashboard] = useIsoShell(\n    wrapper(\n      github('github'),\n      container(\n        title('feds'),\n        subTitle('Own Your Framework'),\n        animationContainer(createMandala()),\n        tagline(\n          'A hard to break, easy to fix frontend development system designed for adoption. Own your framework or it will own you.',\n        ),\n        button('Prove It'),\n      ),\n    ),\n  );\n  startAnimation();\n  setTimeout(() => stopAnimation(), 2000);\n  return [dashboard];\n};\n", "import { useDom } from './app/lib/Dom';\nimport { useSplashScreen } from './app/pages/SplashScreen';\n\nwindow.addEventListener('DOMContentLoaded', async () => {\n  const [setBody] = useDom('body');\n  const [splash] = useSplashScreen();\n  setBody(splash);\n});\n"],
  "mappings": "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",
  "names": []
}
